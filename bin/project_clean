#!/usr/bin/env bash

###########################
#    project_clean 0.1    #
###########################

# This wrapper script is auto-generated by viash 0.4.0-rc1 and is thus a
# derivative work thereof. This software comes with ABSOLUTELY NO WARRANTY from
# Data Intuitive.  The component may contain files which fall under a different
# license. The authors of this component should specify the license in the
# header of such files, or include a separate license file detailing the
# licenses of all included files.

set -e

if [ -z "$VIASH_TEMP" ]; then
  VIASH_TEMP=/tmp
fi

# define helper functions
# ViashQuote: put quotes around non flag values
# $1     : unquoted string
# return : possibly quoted string
# examples:
#   ViashQuote --foo      # returns --foo
#   ViashQuote bar        # returns 'bar'
#   Viashquote --foo=bar  # returns --foo='bar'
function ViashQuote {
  if [[ "$1" =~ ^-+[a-zA-Z0-9_\-]+=.+$ ]]; then
    echo "$1" | sed "s#=\(.*\)#='\1'#"
  elif [[ "$1" =~ ^-+[a-zA-Z0-9_\-]+$ ]]; then
    echo "$1"
  else
    echo "'$1'"
  fi
}
# ViashRemoveFlags: Remove leading flag
# $1     : string with a possible leading flag
# return : string without possible leading flag
# examples:
#   ViashRemoveFlags --foo=bar  # returns bar
function ViashRemoveFlags {
  echo "$1" | sed 's/^--*[a-zA-Z0-9_\-]*=//'
}
# ViashSourceDir: return the path of a bash file, following symlinks
# usage   : ViashSourceDir ${BASH_SOURCE[0]}
# $1      : Should always be set to ${BASH_SOURCE[0]}
# returns : The absolute path of the bash file
function ViashSourceDir {
  SOURCE="$1"
  while [ -h "$SOURCE" ]; do
    DIR="$( cd -P "$( dirname "$SOURCE" )" >/dev/null 2>&1 && pwd )"
    SOURCE="$(readlink "$SOURCE")"
    [[ $SOURCE != /* ]] && SOURCE="$DIR/$SOURCE"
  done
  cd -P "$( dirname "$SOURCE" )" >/dev/null 2>&1 && pwd
}

# find source folder of this component
VIASH_RESOURCES_DIR=`ViashSourceDir ${BASH_SOURCE[0]}`
VIASH_EXEC_MODE="run"

function ViashSetup {
:
}


# ViashHelp: Display helpful explanation about this executable
function ViashHelp {
   echo "Clean a (nextflow) project directory"
   echo
   echo "Options:"
    echo "    file"
    echo "        type: file, default: ."
    echo "        Base directory"
    echo ""
    echo "    -after string"
    echo "        type: string"
    echo ""
    echo "    -before string"
    echo "        type: string"
    echo ""
}

# initialise array
VIASH_POSITIONAL_ARGS=''

while [[ $# -gt 0 ]]; do
    case "$1" in
        -h|--help)
            ViashHelp
            exit;;
        ---setup)
            VIASH_EXEC_MODE="setup"
            shift 1
            ;;
        ---push)
            VIASH_EXEC_MODE="push"
            shift 1
            ;;
        -after)
            VIASH_PAR_AFTER="$2"
            shift 2
            ;;
        -before)
            VIASH_PAR_BEFORE="$2"
            shift 2
            ;;
        *)  # positional arg or unknown option
            # since the positional args will be eval'd, can we always quote, instead of using ViashQuote
            VIASH_POSITIONAL_ARGS="$VIASH_POSITIONAL_ARGS '$1'"
            shift # past argument
            ;;
    esac
done

if [ "$VIASH_EXEC_MODE" == "setup" ]; then
  ViashSetup
  exit 0
fi

if [ "$VIASH_EXEC_MODE" == "push" ]; then
  ViashPush
  exit 0
fi

# parse positional parameters
eval set -- $VIASH_POSITIONAL_ARGS

if [[ $# -gt 0 ]]; then
  VIASH_PAR_DIR="$1"
  shift 1
fi

if [ -z "$VIASH_PAR_DIR" ]; then
  VIASH_PAR_DIR="."
fi


cat << VIASHEOF | bash
set -e
tempscript=\$(mktemp "$VIASH_TEMP/viash-run-project_clean-XXXXXX")
function clean_up {
  rm "\$tempscript"
}
trap clean_up EXIT
cat > "\$tempscript" << 'VIASHMAIN'
# The following code has been auto-generated by Viash.
par_dir='$VIASH_PAR_DIR'
par_after='$VIASH_PAR_AFTER'
par_before='$VIASH_PAR_BEFORE'

resources_dir="$VIASH_RESOURCES_DIR"

#!/bin/bash

add=""

if [ ! -z "\$par_after" ]; then
  add="\$add -after \$par_after"
fi

if [ ! -z "\$par_before" ]; then
  add="\$add -before \$par_before"
fi

nextflow clean -f "\$add"
VIASHMAIN
PATH="$VIASH_RESOURCES_DIR:\$PATH"

bash "\$tempscript"

VIASHEOF
